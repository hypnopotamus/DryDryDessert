/* tslint:disable */
/* eslint-disable */
/**
 * DryDryDessert.Server | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductReview
 */
export interface ProductReview {
    /**
     * 
     * @type {string}
     * @memberof ProductReview
     */
    content: string;
    /**
     * 
     * @type {number}
     * @memberof ProductReview
     */
    sentiment: number;
}

/**
 * Check if a given object implements the ProductReview interface.
 */
export function instanceOfProductReview(value: object): value is ProductReview {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('sentiment' in value) || value['sentiment'] === undefined) return false;
    return true;
}

export function ProductReviewFromJSON(json: any): ProductReview {
    return ProductReviewFromJSONTyped(json, false);
}

export function ProductReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductReview {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'sentiment': json['sentiment'],
    };
}

export function ProductReviewToJSON(json: any): ProductReview {
    return ProductReviewToJSONTyped(json, false);
}

export function ProductReviewToJSONTyped(value?: ProductReview | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'sentiment': value['sentiment'],
    };
}

export const ProductReviewPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
    sentiment: {
        maximum: 1,
        exclusiveMaximum: false,
        minimum: -1,
        exclusiveMinimum: false,
    },
}

