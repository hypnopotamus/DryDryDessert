/* tslint:disable */
/* eslint-disable */
/**
 * DryDryDessert.ProductInformationManagement | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Product,
} from '../models/index';
import {
    ProductFromJSON,
    ProductToJSON,
} from '../models/index';

export interface ApiProductsIdGetRequest {
    id: string;
}

export interface ApiProductsIdQuantityInStockPostRequest {
    id: string;
    quantityInStock: number;
    quantity?: number;
}

/**
 * ProductsApi - interface
 * 
 * @export
 * @interface ProductsApiInterface
 */
export interface ProductsApiInterface {
    /**
     * 
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductsApiInterface
     */
    apiProductsIdGetRaw(requestParameters: ApiProductsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Product>>;

    /**
     */
    apiProductsIdGet(requestParameters: ApiProductsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Product>;

    /**
     * 
     * @param {string} id 
     * @param {number} quantityInStock 
     * @param {number} [quantity] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductsApiInterface
     */
    apiProductsIdQuantityInStockPostRaw(requestParameters: ApiProductsIdQuantityInStockPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     */
    apiProductsIdQuantityInStockPost(requestParameters: ApiProductsIdQuantityInStockPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class ProductsApi extends runtime.BaseAPI implements ProductsApiInterface {

    /**
     */
    async apiProductsIdGetRaw(requestParameters: ApiProductsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Product>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiProductsIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/Products/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProductFromJSON(jsonValue));
    }

    /**
     */
    async apiProductsIdGet(requestParameters: ApiProductsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Product> {
        const response = await this.apiProductsIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiProductsIdQuantityInStockPostRaw(requestParameters: ApiProductsIdQuantityInStockPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiProductsIdQuantityInStockPost().'
            );
        }

        if (requestParameters['quantityInStock'] == null) {
            throw new runtime.RequiredError(
                'quantityInStock',
                'Required parameter "quantityInStock" was null or undefined when calling apiProductsIdQuantityInStockPost().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['quantity'] != null) {
            queryParameters['quantity'] = requestParameters['quantity'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/Products/{id}/{QuantityInStock}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"QuantityInStock"}}`, encodeURIComponent(String(requestParameters['quantityInStock'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiProductsIdQuantityInStockPost(requestParameters: ApiProductsIdQuantityInStockPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiProductsIdQuantityInStockPostRaw(requestParameters, initOverrides);
    }

}
